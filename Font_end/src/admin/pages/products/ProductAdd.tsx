import React, { useEffect, useState } from "react";
import {
    Form,
    Input,
    InputNumber,
    Button,
    Select,
    Upload,
    Card,
    message,
} from "antd";
import { UploadOutlined } from "@ant-design/icons";
import { useNavigate } from "react-router-dom";

const { TextArea } = Input;
const { Option } = Select;

// H√†m x·ª≠ l√Ω upload ·∫£nh
const normFile = (e: any) => {
    if (Array.isArray(e)) {
        return e;
    }
    return e?.fileList;
};

const ProductAdd: React.FC = () => {
    const [form] = Form.useForm();
    const navigate = useNavigate();
    const [categories, setCategories] = useState([]); // State l∆∞u danh m·ª•c

    // Fetch danh m·ª•c t·ª´ API
    useEffect(() => {
        const fetchCategories = async () => {
            try {
                const response = await fetch("http://127.0.0.1:8000/api/categories");
                const data = await response.json();
                console.log("üìå Categories:", data);
                setCategories(data);
            } catch (error) {
                console.error("L·ªói khi l·∫•y danh m·ª•c:", error);
                message.error("Kh√¥ng th·ªÉ t·∫£i danh m·ª•c!");
            }
        };

        fetchCategories();
    }, []);

    const onFinish = async (values: any) => {
        try {
            const formData = new FormData();
            formData.append("name_product", values.name);
            formData.append("categories_id", values.category);
            formData.append("base_stock", values.quantity);
            formData.append("price_regular", values.price);
            formData.append("price_sale", values.discount ? values.price - (values.price * values.discount) / 100 : values.price);
            formData.append("description", values.description);
            formData.append("content", values.content || "");
            formData.append("color", values.color || "Ch∆∞a c·∫≠p nh·∫≠t");
            formData.append("size", values.size || "Ch∆∞a c·∫≠p nh·∫≠t");

            // Th√™m ·∫£nh ƒë·∫°i di·ªán
            if (values.avatar?.[0]?.originFileObj) {
                formData.append("image", values.avatar[0].originFileObj);
            }

            // G·ª≠i request l√™n API
            const response = await fetch("http://127.0.0.1:8000/api/products", {
                method: "POST",
                body: formData,
            });

            if (response.ok) {
                message.success("Th√™m s·∫£n ph·∫©m th√†nh c√¥ng!");
                navigate("/admin/products");
            } else {
                throw new Error("L·ªói khi th√™m s·∫£n ph·∫©m");
            }
        } catch (error) {
            console.error("L·ªói khi g·ª≠i API:", error);
            message.error("Kh√¥ng th·ªÉ th√™m s·∫£n ph·∫©m!");
        }
    };

    return (
        <Card title="Th√™m s·∫£n ph·∫©m m·ªõi" bordered={false} style={{ maxWidth: 800, margin: "0 auto" }}>
            <Form form={form} name="productAdd" layout="vertical" onFinish={onFinish}>
                {/* T√™n s·∫£n ph·∫©m */}
                <Form.Item label="T√™n s·∫£n ph·∫©m" name="name" rules={[{ required: true, message: "Vui l√≤ng nh·∫≠p t√™n s·∫£n ph·∫©m!" }]}>
                    <Input placeholder="Nh·∫≠p t√™n s·∫£n ph·∫©m" />
                </Form.Item>

                {/* Danh m·ª•c */}
                <Form.Item label="Danh m·ª•c" name="category" rules={[{ required: true, message: "Vui l√≤ng ch·ªçn danh m·ª•c!" }]}>
                    <Select placeholder="Ch·ªçn danh m·ª•c">
                        {categories.map((category) => (
                            <Option key={category.id} value={category.id}>
                                {category.name}
                            </Option>
                        ))}
                    </Select>
                </Form.Item>

                {/* S·ªë l∆∞·ª£ng */}
                <Form.Item label="S·ªë l∆∞·ª£ng" name="quantity" rules={[{ required: true, message: "Vui l√≤ng nh·∫≠p s·ªë l∆∞·ª£ng!" }]}>
                    <InputNumber min={1} style={{ width: "100%" }} placeholder="Nh·∫≠p s·ªë l∆∞·ª£ng" />
                </Form.Item>

                {/* Gi√° s·∫£n ph·∫©m */}
                <Form.Item label="Gi√° s·∫£n ph·∫©m (VNƒê)" name="price" rules={[{ required: true, message: "Vui l√≤ng nh·∫≠p gi√° s·∫£n ph·∫©m!" }]}>
                    <InputNumber min={0} style={{ width: "100%" }} placeholder="Nh·∫≠p gi√° s·∫£n ph·∫©m" />
                </Form.Item>

                {/* Gi·∫£m gi√° s·∫£n ph·∫©m */}
                <Form.Item label="Gi·∫£m gi√° s·∫£n ph·∫©m (%)" name="discount">
                    <InputNumber min={0} max={100} style={{ width: "100%" }} placeholder="Nh·∫≠p % gi·∫£m gi√° (N·∫øu c√≥)" />
                </Form.Item>

                {/* Mi√™u t·∫£ */}
                <Form.Item label="Mi√™u t·∫£" name="description" rules={[{ required: true, message: "Vui l√≤ng nh·∫≠p mi√™u t·∫£!" }]}>
                    <TextArea rows={4} placeholder="Nh·∫≠p mi√™u t·∫£ s·∫£n ph·∫©m" />
                </Form.Item>

                {/* M√†u */}
                <Form.Item label="M√†u" name="color">
                    <Input placeholder="Nh·∫≠p m√†u s·∫£n ph·∫©m" />
                </Form.Item>

                {/* K√≠ch c·ª° */}
                <Form.Item label="K√≠ch c·ª°" name="size">
                    <Input placeholder="Nh·∫≠p k√≠ch c·ª° s·∫£n ph·∫©m" />
                </Form.Item>

                {/* N·ªôi dung */}
                <Form.Item label="N·ªôi dung" name="content">
                    <TextArea rows={4} placeholder="Nh·∫≠p n·ªôi dung s·∫£n ph·∫©m" />
                </Form.Item>

                {/* ·∫¢nh ƒë·∫°i di·ªán */}
                <Form.Item
                    label="·∫¢nh ƒë·∫°i di·ªán"
                    name="avatar"
                    valuePropName="fileList"
                    getValueFromEvent={normFile}
                    rules={[{ required: true, message: "Vui l√≤ng ch·ªçn ·∫£nh ƒë·∫°i di·ªán!" }]}
                >
                    <Upload name="avatar" listType="picture" maxCount={1} beforeUpload={() => false}>
                        <Button icon={<UploadOutlined />}>Ch·ªçn ·∫£nh ƒë·∫°i di·ªán</Button>
                    </Upload>
                </Form.Item>

                {/* Album ·∫£nh */}
                <Form.Item label="Album ·∫£nh" name="album" valuePropName="fileList" getValueFromEvent={normFile}>
                    <Upload name="album" listType="picture-card" multiple beforeUpload={() => false}>
                        <div>
                            <UploadOutlined />
                            <div style={{ marginTop: 8 }}>Ch·ªçn ·∫£nh</div>
                        </div>
                    </Upload>
                </Form.Item>

                {/* N√∫t h√†nh ƒë·ªông */}
                <Form.Item>
                    <Button type="primary" htmlType="submit">
                        Th√™m s·∫£n ph·∫©m
                    </Button>
                    <Button style={{ marginLeft: 8 }} onClick={() => navigate("/admin/products")}>
                        H·ªßy
                    </Button>
                </Form.Item>
            </Form>
        </Card>
    );
};

export default ProductAdd;
